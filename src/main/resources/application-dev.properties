# Basic Application and Server Configuration
spring.application.name=My-Portfolio
server.port=8080

# PostgreSQL Database Configuration
# Local dev setup using a PostgreSQL database.
spring.datasource.url=jdbc:postgresql://localhost:5432/dhirajportfolio
spring.datasource.username=postgres
spring.datasource.password=Dhiraj123@#

# Hikari Connection Pool settings (optional, but good practice for fine-tuning)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA and Hibernate Configuration
# 'validate' mode checks for table existence but doesn't create them.
# 'update' is useful for development to automatically create/modify tables.
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=validate

spring.jpa.show-sql=true
spring.jpa.open-in-view=false

# SQL Script Initialization
# This runs data.sql (and schema.sql) automatically on startup.
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# JWT and Security Settings
# This secret should be stored securely and not in plaintext.
jwt.secret=MThmMDM3M2I0OWFkMjQzNGI0ZmVmYjFjNzY1NmY1Yjk3ZTA2NzA2OThmMDMzN2M2MA==
# Expiration in milliseconds (86,400,000 ms = 24 hours)
jwt.expiration=86400000

# CORS (Cross-Origin Resource Sharing) Configuration
# Allows requests from the specified origin, which is crucial for front-end apps.
cors.allowed-origins=http://127.0.0.1:5500
#cors.allowed-origins = http://localhost:5173
file.upload-dir=./uploads/resumes